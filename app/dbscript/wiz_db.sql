-- 제약 조건 해제
SET
    FOREIGN_KEY_CHECKS = 0;

-- 기존 테이블 삭제
DROP TABLE IF EXISTS `REGION`;

DROP TABLE IF EXISTS `POPULATION`;

DROP TABLE IF EXISTS `RISING_BUSINESS`;

DROP TABLE IF EXISTS `CATEGORY`;

DROP TABLE IF EXISTS `POPINFO`;

DROP TABLE IF EXISTS `SHOP`;

DROP TABLE IF EXISTS `COMMERCIAL_DISTRICT`;

-- 새 테이블 생성
CREATE TABLE
    `REGION` (
        `REGION_ID` INT NOT NULL AUTO_INCREMENT COMMENT 'PK',
        `CITY` VARCHAR(50) NOT NULL,
        `DISTRICT` VARCHAR(50) NOT NULL,
        `SUB_DISTRICT` VARCHAR(50) NOT NULL,
        PRIMARY KEY (`REGION_ID`)
    );

CREATE TABLE
    `POPULATION` (
        `POP_ID` INT NOT NULL AUTO_INCREMENT COMMENT 'PK',
        `ID` INT NOT NULL COMMENT 'FK',
        `GENDER` VARCHAR(9) NOT NULL COMMENT '성별',
        `0TO9` INT NOT NULL COMMENT '0대 인구',
        `10TO19` INT NOT NULL COMMENT '10대 인구',
        `20TO29` INT NOT NULL COMMENT '20대 인구',
        `30TO39` INT NOT NULL COMMENT '30대 인구',
        `40TO49` INT NOT NULL COMMENT '40대 인구',
        `50TO59` INT NOT NULL COMMENT '50대 인구',
        `60TO69` INT NOT NULL COMMENT '60대 인구',
        `70TO79` INT NOT NULL COMMENT '70대 인구',
        `80TO89` INT NOT NULL COMMENT '80대 인구',
        `90TO99` INT NOT NULL COMMENT '90대 인구',
        `100TO109` INT NOT NULL COMMENT '100대 인구',
        `TOTAL` INT NOT NULL COMMENT '총인구',
        `MALETOTAL` INT NOT NULL COMMENT '남자 총인구',
        `FEMALETOTAL` INT NOT NULL COMMENT '여자 총인구',
        `YEAR_MONTH` INT NOT NULL COMMENT '기준 년월',
        PRIMARY KEY (`POP_ID`),
        FOREIGN KEY (`ID`) REFERENCES `REGION` (`REGION_ID`)
    );

CREATE TABLE
    `RISING_BUSINESS` (
        `REGION_ID` INT NOT NULL COMMENT 'PK',
        `BUSINESS_NAME` VARCHAR(50) NOT NULL,
        `GROWTH_RATE` DECIMAL(7, 2) NOT NULL,
        `RANK` INT NOT NULL,
        PRIMARY KEY (`REGION_ID`),
        FOREIGN KEY (`REGION_ID`) REFERENCES `REGION` (`REGION_ID`)
    );

CREATE TABLE
    `CATEGORY` (
        `CATEGORY_ID` INT NOT NULL AUTO_INCREMENT COMMENT 'PK',
        `MAIN_CATEGORY` VARCHAR(50),
        `SUB_CATEGORY` VARCHAR(50),
        `DETAIL_CATEGORY` VARCHAR(50),
        PRIMARY KEY (`CATEGORY_ID`)
    );

CREATE TABLE
    `POPINFO` (
        `ID` INT NOT NULL AUTO_INCREMENT COMMENT 'PK',
        `REGION_ID` INT NOT NULL COMMENT 'FK',
        `BUIS` INT COMMENT '업소 수',
        `MOVEPOP` INT COMMENT '유동인구',
        `SALE` INT COMMENT '매출',
        `WORKPOP` INT COMMENT '직장인구',
        `EARN` INT COMMENT '소득',
        `SPEND` INT COMMENT '소비',
        `HOMEPOP` INT COMMENT '세대수',
        `YEAR_MONTH` INT NOT NULL COMMENT '년월',
        PRIMARY KEY (`ID`),
        FOREIGN KEY (`REGION_ID`) REFERENCES `REGION` (`REGION_ID`)
    );

CREATE TABLE
    `SHOP` (
        `ID` INT NOT NULL AUTO_INCREMENT COMMENT 'PK',
        `REGION_ID` INT NOT NULL COMMENT 'FK',
        `NAME` VARCHAR(300) COMMENT '상호명',
        `SPOT` VARCHAR(300) COMMENT '지점명',
        `LANDCATEGORY` VARCHAR(30) COMMENT '대지 유형',
        `ROADNAME` VARCHAR(255) COMMENT '도로명',
        `YEAR_MONTH` INT NOT NULL COMMENT '년월',
        PRIMARY KEY (`ID`),
        FOREIGN KEY (`REGION_ID`) REFERENCES `REGION` (`REGION_ID`)
    );

CREATE TABLE
    `COMMERCIAL_DISTRICT` (
        `COMMERCIAL_DISTRICT_ID` INT NOT NULL AUTO_INCREMENT COMMENT 'PK',
        `REGION_ID` INT NOT NULL COMMENT 'FK',
        `CATEGORY_ID` INT NOT NULL COMMENT 'FK',
        `NATIONAL_DENSITY` DECIMAL(5, 2),
        `CITY_DENSITY` DECIMAL(5, 2),
        `DISTRICT_DENSITY` DECIMAL(5, 2),
        `SUB_DISTRICT_DENSITY` DECIMAL(5, 2),
        `MARKET_SIZE` INT,
        `AVERAGE_SALES` INT,
        `AVERAGE_PAYMENT` INT,
        `USAGE_COUNT` INT,
        `OPERATING_COST` INT,
        `FOOD_COST` INT,
        `EMPLOYEE_COST` INT,
        `RENTAL_COST` INT,
        `TAX_COST` INT,
        `FAMILY_EMPLOYEE_COST` INT,
        `CEO_COST` INT,
        `ETC_COST` INT,
        `AVERAGE_PROFIT` INT,
        `AVG_PROFIT_PER_MON` DECIMAL(5, 2),
        `AVG_PROFIT_PER_TUES` DECIMAL(5, 2),
        `AVG_PROFIT_PER_WED` DECIMAL(5, 2),
        `AVG_PROFIT_PER_THU` DECIMAL(5, 2),
        `AVG_PROFIT_PER_FRI` DECIMAL(5, 2),
        `AVG_PROFIT_PER_SAT` DECIMAL(5, 2),
        `AVG_PROFIT_PER_SUN` DECIMAL(5, 2),
        `AVG_PROFIT_PER_06_09` DECIMAL(5, 2),
        `AVG_PROFIT_PER_09_12` DECIMAL(5, 2),
        `AVG_PROFIT_PER_12_15` DECIMAL(5, 2),
        `AVG_PROFIT_PER_15_18` DECIMAL(5, 2),
        `AVG_PROFIT_PER_18_21` DECIMAL(5, 2),
        `AVG_PROFIT_PER_21_24` DECIMAL(5, 2),
        `AVG_CLIENT_PER_M_20` DECIMAL(5, 2),
        `AVG_CLIENT_PER_M_30` DECIMAL(5, 2),
        `AVG_CLIENT_PER_M_40` DECIMAL(5, 2),
        `AVG_CLIENT_PER_M_50` DECIMAL(5, 2),
        `AVG_CLIENT_PER_M_60` DECIMAL(5, 2),
        `AVG_CLIENT_PER_F_20` DECIMAL(5, 2),
        `AVG_CLIENT_PER_F_30` DECIMAL(5, 2),
        `AVG_CLIENT_PER_F_40` DECIMAL(5, 2),
        `AVG_CLIENT_PER_F_50` DECIMAL(5, 2),
        `AVG_CLIENT_PER_F_60` DECIMAL(5, 2),
        `TOP_MENU_1` VARCHAR(50),
        `TOP_MENU_2` VARCHAR(50),
        `TOP_MENU_3` VARCHAR(50),
        `TOP_MENU_4` VARCHAR(50),
        `TOP_MENU_5` VARCHAR(50),
        PRIMARY KEY (`COMMERCIAL_DISTRICT_ID`),
        FOREIGN KEY (`REGION_ID`) REFERENCES `REGION` (`REGION_ID`),
        FOREIGN KEY (`CATEGORY_ID`) REFERENCES `CATEGORY` (`CATEGORY_ID`)
    );

-- 제약 조건 설정
SET
    FOREIGN_KEY_CHECKS = 1;

-- 테이블 확인
SHOW TABLES;